{"version":3,"sources":["components/TodoList/TodoListTasks/TodoListTasks.module.css","components/Button/Button.module.css","components/Login/Login.module.css","BLL/utils/validators/validators.js","components/ReduxFormsControls/ReduxFormsControls.js","BLL/AuthSelectors.js","components/Login/LoginForm.jsx","DAL/API.js","BLL/AuthReducer.js","components/Login/LoginContainer.jsx","components/DragAndDrop/Draggable/Draggable.js","components/TodoList/TodoListTasks/TodoListTask/TodoListTask.js","BLL/Reducer.jsx","components/DragAndDrop/Droppable/Droppable.js","components/TodoList/TodoListTasks/TodoListTasks.js","components/TodoList/TodoListFooter/TodoListFooter.js","components/TodoList/TodoListTitle/TodoListTitle.js","components/Button/Button.js","components/AddNewItemForm/AddNewItemForm.js","components/TodoList/TodoList.js","components/LogOut/LogOut.js","components/TodoList/TodoListPage.js","App.js","serviceWorker.js","BLL/store.js","index.js","components/TodoList/TodoListTasks/TodoListTask/TodoListTask.module.css","components/TodoList/TodoList.module.css","components/TodoList/TodoListFooter/TodoListFooter.module.css","components/AddNewItemForm/AddNewItemForm.module.css","components/ReduxFormsControls/ReduxFormsControls.module.css","components/TodoList/TodoListTitle/TodoListTitle.module.css","components/LogOut/LogOut.module.css"],"names":["module","exports","TodoListTasks","button","Login","textAboutClipboard","LoginPassword","formError","input","maxLength","ReduxFormsControls","_ref","meta","props","Object","objectWithoutProperties","haveError","touched","error","react_default","a","createElement","className","concat","css","formControl","children","Input","restProps","child","ReduxFormsControls_ReduxFormsControls","assign","createField","component","validators","name","placeholder","arguments","length","undefined","text","Field","validate","required","value","getAuthUserIsAuthS","state","authDataState","isAuth","getAuthUserLoginS","login","maxLength20","reduxForm","form","connect","onSubmit","handleSubmit","type","instance","axios","create","baseURL","withCredentials","headers","API-KEY","API","newTitle","post","title","get","TodoListId","delete","taskId","objects","put","todolistId","authAPI","then","response","data","email","password","rememberMe","setUserData","userId","saveState","localStorage","setItem","JSON","stringify","checkUserDataThunkCreator","asyncToGenerator","regenerator_default","mark","_callee","dispatch","responseData","wrap","_context","prev","next","sent","resultCode","id","stop","_x","apply","this","logOutThunkCreator","_ref3","_callee3","_context3","_x3","initialState","userPhoto","AuthReducer","action","_objectSpread","logInThunkCreator","_ref2","_callee2","_context2","stopSubmit","_error","messages","_x2","react_router","to","onClick","copyToClipboard","Login_LoginForm","formData","Email","Password","Remember","Draggable","drag","e","dataTransfer","setData","target","noAllowDrop","stopPropagation","draggable","onDragStart","style","onDragOver","React","Component","TodoListTask","_useState","useState","_useState2","slicedToArray","editMode","setEditMode","_useState3","task","_useState4","taskTitle","setTaskTitle","containerCssClass","status","todoListTask","done","Draggable_Draggable","checked","onChange","event","changeStatus","currentTarget","taskText","onBlur","changeTitle","autoFocus","priority","deleteTask","tasksId","ADD_TASK","setTasks","tasks","addTask","newTask","changeTodoListTitleAC","addTaskThunkCreator","item","deleteTaskThunkCreator","_ref6","_callee6","_context6","_x6","todolists","buttonTitle","ToDoListsReducer","Reducer_objectSpread","todoLists","map","newTodoList","toConsumableArray","filter","listTask","changeObj","Droppable","drop","preventDefault","dataOfTaskId","getData","_this","dragAndDropThunkCreator","allowDrop","onDrop","dropTodolistId","dndId","_ref8","_callee8","getState","beforDndTodolistId","beforDndTaskId","beforDndTitle","_context8","partState","el","_x8","_x9","tasksElements","TodoListTasks_TodoListTask_TodoListTask","key","DragAndDrop_Droppable_Droppable","height","TodoListFooter","isHidden","onAllFilterClick","changeFilter","onCompletedFilterClick","onActiveFilterClick","onShowFiltersClick","setState","onHideFiltersClick","render","classForAll","filterValue","filterActive","classForCompleted","classForActive","center","color","TodoListTitle","setTitle","deleteListTask","changeTodoLIstTitle","Button","buttonCallBack","AddNewItemForm","onAddItemClick","newText","addItem","onTitleChanged","onKeyPress","classNameForInput","newTaskForm","components_Button_Button","bind","assertThisInitialized","TodoList","stateAsString","nextTaskId","todoListTitle","newFilterValue","addNewTask","todoListId","deleteListTaskThunkCreator","changeTodoListTitleACThunkCreator","changeObjectAPI","obj","changeObjectThunkCreator","changeTask","isDone","deactivateEditMode","activateEditMode","_this$props$tasks","todoList","TodoList_TodoListTitle_TodoListTitle","components_AddNewItemForm_AddNewItemForm","TodoList_TodoListTasks_TodoListTasks","t","TodoList_TodoListFooter_TodoListFooter","setTasksThunkCreator","ConnectTodoList","_ref4","_callee4","_context4","items","_x4","_ref5","_callee5","_context5","_x5","_ref7","_callee7","_context7","_x7","find","forEach","textLogin","react_router_dom","NavLink","TodoListPage","addTodoList","addTodoListThunkCreator","tl","components_TodoList_TodoList","Fragment","components_LogOut_LogOut","MainComponentTodoList","setTodoListsThunkCreator","App","path","TodoList_TodoListPage","LoginContainer","authorizationCheckThunk","getItem","parse","Boolean","window","location","hostname","match","store","createStore","combineReducers","Reducer","formReducer","applyMiddleware","thunkMiddleware","ReactDOM","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b362ca90.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoListTasks\":\"TodoListTasks_TodoListTasks__RYP6B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3QF_k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__1ujut\",\"textAboutClipboard\":\"Login_textAboutClipboard__2vF-s\",\"LoginPassword\":\"Login_LoginPassword__2Cv_8\",\"formError\":\"Login_formError__9ZYrJ\",\"input\":\"Login_input__1zhXD\",\"button\":\"Login_button__3J267\"};","export const required = value => {\n    return value ? undefined : `Field is required`;\n};\nexport const maxLengthCreator = maxLength => value => {\n    return value && value.length > maxLength ? `Max length is ${maxLength} symbols` : undefined;\n};","import React from 'react';\nimport css from './ReduxFormsControls.module.css';\nimport {Field} from \"redux-form\";\n\nexport const ReduxFormsControls = ({input, meta, ...props}) => {\n    const haveError = meta.touched && meta.error;\n    return (\n        <div className={`${css.formControl} ${haveError && css.error}`}>\n            {props.children}\n            {haveError && <span>{meta.error}</span>}\n        </div>\n    )\n};\nexport const Input = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return <ReduxFormsControls {...props}><input {...input} {...restProps}/></ReduxFormsControls>\n};\nexport const createField = (component, validators, name, placeholder, props = {}, text = \"\") => (\n    <div>\n        <Field component={component} validate={validators} name={name}\n               placeholder={placeholder} {...props}/>{text}\n    </div>\n);","export const getAuthUserIsAuthS = (state) => {\n    return state.authDataState.isAuth;\n};\nexport const getAuthUserLoginS = (state) => {\n    return state.authDataState.login;\n};","import React from 'react';\nimport css from './Login.module.css';\nimport {Field, reduxForm} from \"redux-form\";\nimport {createField, Input} from \"../ReduxFormsControls/ReduxFormsControls\";\nimport {maxLengthCreator, required} from \"../../BLL/utils/validators/validators\";\nimport {connect} from \"react-redux\";\nimport {getAuthUserIsAuthS} from \"../../BLL/AuthSelectors\";\n\nconst maxLength20 = maxLengthCreator(20);\n\nconst LoginForm = props => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            {props.isAuth === true\n                ? <button>Log out</button>\n                : <div>\n                    {createField(Input, [required, maxLength20], `Email`, `Email`, {className: css.input})}\n                    {createField(Input, [required, maxLength20], `Password`, `Password`, {\n                        type: `password`, className: css.input\n                    })}\n                    {createField(`input`, null, `Remember`, null, {type: `checkbox`}, `Remember me`)}\n                </div>}\n            {props.error && <div className={css.formError}>{props.error}</div>}\n            <div>{props.isAuth ? <button>Log out</button> : <button className={css.button}>Log in</button>}</div>\n        </form>\n    )\n};\nconst mapStateToProps = state => ({isAuth: getAuthUserIsAuthS(state)});\nexport default reduxForm({form: `login`})(connect(mapStateToProps, {})(LoginForm));","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\n    withCredentials: true,\n    headers: {\"API-KEY\": \"326adc8b-48be-4905-a33d-14875af1c491\"}\n});\n\nexport const API = {\n    createTodoList: (newTitle) => instance.post(`todo-lists/`, {title: newTitle}),\n    getTodoList: () => instance.get(`todo-lists/`),\n    getTasks: (TodoListId) => instance.get(`todo-lists/${TodoListId}/tasks`),\n    createTasks: (TodoListId, newTitle) => instance.post(`todo-lists/${TodoListId}/tasks`, {title: newTitle}),\n    deleteTodoList: (TodoListId) => instance.delete(`todo-lists/${TodoListId}`),\n    deleteTask: (TodoListId, taskId) => instance.delete(`todo-lists/tasks/${taskId}`),\n    changeObjectAPI: (objects) => instance.put(`todo-lists/tasks`, objects),\n    changeTodoListTitle: (todolistId, title) => instance.put(`todo-lists/${todolistId}`, {title}),\n};\n\nexport const authAPI = {\n    setUserDataAPI: () => instance.get(`auth/me`).then(response => response.data),\n    login: (email, password, rememberMe = false) => instance.post(`auth/login`, {\n        email,\n        password,\n        rememberMe\n    }).then(response => response.data),\n    logout: () => instance.delete(`auth/login`).then(response => response.data)\n};","import {authAPI} from \"../DAL/API\";\nimport {stopSubmit} from \"redux-form\";\n\nconst SET_USER_DATA = 'SN/HEADER/SET_USER_DATA';\nconst SET_USER_PHOTO = 'SN/HEADER/SET_USER_PHOTO';\nconst IS_AUTH = 'IS_AUTH';\n\nexport const isAuthAction = isAuth => ({type: IS_AUTH, isAuth});\nexport const setUserData = (email, userId, login, isAuth) => ({\n    type: SET_USER_DATA,\n    data: {email, userId, login, isAuth}\n});\nexport const saveState = isAuth => localStorage.setItem(\"isAuth\", JSON.stringify(isAuth));\n\n\nexport const checkUserDataThunkCreator = () => async dispatch => {\n    let responseData = await authAPI.setUserDataAPI();\n    if (responseData.resultCode === 0) {// if we have login (resultCode === 0) then we can make request to get setUserData\n        // let {email, userId, login} = data.data;\n        let email = responseData.data.email;\n        let userId = responseData.data.id;\n        let login = responseData.data.login;\n        dispatch(setUserData(email, userId, login, true));\n    }\n};\nexport const logInThunkCreator = (email, password, rememberMe, isAuth) => async dispatch => {\n    if (email === `test@gmail.com`) email = `itemka2503@gmail.com`;\n    if (password === `test`) password = `Developer2503`;\n    let responseData = await authAPI.login(email, password, rememberMe);\n    saveState(true);\n    if (responseData.resultCode === 0) dispatch(checkUserDataThunkCreator(isAuth));\n    else dispatch(stopSubmit(\"login\", {_error: responseData.messages,}));\n};\nexport const logOutThunkCreator = () => async dispatch => {\n    let responseData = await authAPI.logout();\n    if (responseData.resultCode === 0) {\n        dispatch(setUserData(null, null, null, false));\n    }\n    saveState(false);\n};\n\nexport const authorizationCheckThunk = () => dispatch => {\n    let stateAsString = localStorage.getItem(\"isAuth\");\n    if (stateAsString !== null) { // если не было ни одного сохранения, то будет null.\n        dispatch(isAuthAction(JSON.parse(stateAsString)));\n        dispatch(checkUserDataThunkCreator());\n    }\n};\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false,\n    userPhoto: null,\n};\n\nconst AuthReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_DATA:\n            return {\n                ...state,\n                ...action.data,\n            };\n        case SET_USER_PHOTO:\n            return {\n                ...state,\n                userPhoto: action.userPhoto,\n            };\n        case IS_AUTH:\n            return {\n                ...state,\n                isAuth: action.isAuth\n            };\n        default: {\n            return state;\n        }\n    }\n};\nexport default AuthReducer;","import React from 'react';\nimport css from './Login.module.css';\nimport {Redirect} from \"react-router-dom\";\nimport copyToClipboard from 'copy-to-clipboard';\nimport LoginForm from \"./LoginForm\";\nimport {getAuthUserIsAuthS} from \"../../BLL/AuthSelectors\";\nimport {connect} from \"react-redux\";\nimport {logInThunkCreator, logOutThunkCreator} from \"../../BLL/AuthReducer\";\n\nconst Login = props => {\n    const onSubmit = formData => {\n        props.isAuth\n            ? props.logOutThunkCreator()\n            : props.logInThunkCreator(formData.Email, formData.Password, formData.Remember, props.isAuth);\n    };\n\n    if (props.isAuth) return <Redirect to={`/todolists`}/>;\n    else return (\n        <div className={css.Login}>\n            <h1>Login</h1>\n            <div className={css.textAboutClipboard}>\n                <div>If you will click on the red field</div>\n                text will be copy to Clipboard\n            </div>\n            <div>\n                <h3>Login:\n                    <text onClick={() => copyToClipboard('test@gmail.com')}\n                          className={css.LoginPassword}>test@gmail.com\n                    </text>\n                </h3>\n                <h3>Password:\n                    <text onClick={() => copyToClipboard('test')} className={css.LoginPassword}>test</text>\n                </h3>\n            </div>\n            <LoginForm onSubmit={onSubmit}/>\n        </div>\n    )\n};\nconst mapStateToProps = state => ({isAuth: getAuthUserIsAuthS(state)});\nexport default connect(mapStateToProps, {logInThunkCreator, logOutThunkCreator})(Login);","import React from 'react';\n\nexport default class Draggable extends React.Component {\n    drag = (e) => {\n        e.dataTransfer.setData(`transfer`, e.target.id);\n    };\n\n    noAllowDrop = (e) => {\n        e.stopPropagation();\n    };\n\n    render() {\n        return (\n            <div id={this.props.id} draggable={`true`} onDragStart={this.drag} style={this.props.style}\n                 onDragOver={this.noAllowDrop}>\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\n","import React, {useState} from 'react';\nimport '../../../../App.css';\nimport css from './TodoListTask.module.css';\nimport button from './../../../Button/Button.module.css';\nimport Draggable from \"../../../DragAndDrop/Draggable/Draggable\";\n\nconst TodoListTask = (props) => {\n    let [editMode, setEditMode] = useState(false);\n    let [taskTitle, setTaskTitle] = useState(props.task.title);\n    let onIsDoneChanged = event => props.changeStatus(props.task.id, event.currentTarget.checked ? 2 : 0);\n    let updateTitle = event => setTaskTitle(event.currentTarget.value);\n    let activateEditMode = () => setEditMode(true);\n    let deactivateEditMode = () => {\n        setEditMode(false);\n        props.changeTitle(props.task.id, taskTitle);\n    };\n    let onDeleteTask = () => props.deleteTask(props.tasksId, props.task.id);\n\n    let containerCssClass = props.task.status === 2 ? `${css.todoListTask} ${css.done}` : `${css.todoListTask}`;\n    return (\n        <Draggable id={props.task.id}>\n            <div className={`${containerCssClass} ${css.todoListTask}`}>\n                <input type=\"checkbox\" checked={props.task.status} onChange={onIsDoneChanged}/>{'   '}\n                <span className={css.taskText}>\n                    {editMode\n                        ? <input onBlur={deactivateEditMode}\n                                 onChange={updateTitle}\n                                 autoFocus={true}\n                                 value={taskTitle}/>\n                        : <span onClick={activateEditMode}>{props.task.title}</span>\n                    }\n                </span>{'   '}\n                <span className={css.priority}> (priority: {props.task.priority})</span>\n                <button className={button.button} onClick={onDeleteTask}>X</button>\n            </div>\n        </Draggable>\n    );\n};\n\nexport default TodoListTask;","import {API} from \"../DAL/API\";\n\nexport const SET_TODOLISTS = 'SET_TODOLISTS';\nexport const SET_TASKS = 'SET_TASKS';\nexport const ADD_TODOLIST = 'TodoList/Reduser/ADD_TODOLIST';\nexport const ADD_TASK = 'TodoList/Reduser/ADD_TASK';\nexport const DELETE_LIST_TASK = 'TodoList/Reduser/DELETE_LIST_TASK';\nexport const DELETE_TASK = 'TodoList/Reduser/DELETE_TASK';\nexport const CHANGE_OBJ = 'TodoList/Reduser/CHANGE_OBJ';\nexport const CHANGE_TODOLIST_TITLE = 'TodoList/Reduser/CHANGE_TODOLIST_TITLE';\n\n\nexport const setTodoLists = todoLists => ({type: SET_TODOLISTS, todoLists: todoLists});\nexport const setTasks = (tasks, todolistId) => ({type: SET_TASKS, todolistId: todolistId, tasks: tasks});\nexport const addTodoList = newTodoList => ({type: ADD_TODOLIST, newTodoList: newTodoList});\nexport const addTask = (newTask, todolistId) => ({type: ADD_TASK, newTask, todolistId});\nexport const deleteListTask = (tasksId) => ({type: DELETE_LIST_TASK, tasksId: tasksId});\nexport const deleteTask = (todolistId, taskId) => ({type: DELETE_TASK, todolistId, taskId});\nexport const changeObj = (tasksId, taskId, changeObj) => ({type: CHANGE_OBJ, tasksId, taskId, changeObj});\nexport const changeTodoListTitleAC = (todolistId, title) => ({type: CHANGE_TODOLIST_TITLE, todolistId, title});\n\n\nexport const addTodoListThunkCreator = (title) => async dispatch => {\n    let response = await API.createTodoList(title);\n    dispatch(addTodoList(response.data.data.item));\n};\nexport const setTodoListsThunkCreator = () => async dispatch => {\n    let response = await API.getTodoList();\n    dispatch(setTodoLists(response.data));\n};\nexport const addTaskThunkCreator = (newTitle, todolistId) => async dispatch => {\n    let response = await API.createTasks(todolistId, newTitle);\n    dispatch(addTask(response.data.data.item, todolistId));\n};\nexport const setTasksThunkCreator = (todolistId) => async dispatch => {\n    let response = await API.getTasks(todolistId);\n    dispatch(setTasks(response.data.items, todolistId));\n};\nexport const deleteListTaskThunkCreator = (todoListId) => async dispatch => {\n    await API.deleteTodoList(todoListId);\n    dispatch(deleteListTask(todoListId));\n};\nexport const deleteTaskThunkCreator = (todolistId, taskId) => async dispatch => {\n    await API.deleteTask(todolistId, taskId);\n    dispatch(deleteTask(todolistId, taskId));\n};\nexport const changeTodoListTitleACThunkCreator = (todolistId, title) => async dispatch => {\n    await API.changeTodoListTitle(todolistId, title);\n    dispatch(changeTodoListTitleAC(todolistId, title));\n};\nexport const changeObjectThunkCreator = (todolistId, taskId, obj) => (dispatch, getState) => {\n    getState().partState.todolists.find(item => item.id === todolistId).tasks.forEach(el => {\n        if (el.id === taskId) {\n            API.changeObjectAPI({...el, ...obj}).then(response => {\n                dispatch(changeObj(todolistId, taskId, obj))\n            })\n        }\n    });\n};\n\nexport const dragAndDropThunkCreator = (dropTodolistId, dndId) => async (dispatch, getState) => {\n    let beforDndTodolistId = '';\n    let beforDndTaskId = '';\n    let beforDndTitle = '';\n    await getState().partState.todolists.map(item => {\n        item.tasks.map(el => {\n            if (el.id === dndId) {\n                beforDndTodolistId = item.id;\n                beforDndTaskId = el.id;\n                beforDndTitle = el.title;\n            }\n        });\n    });\n    dispatch(addTaskThunkCreator(beforDndTitle, dropTodolistId));\n    dispatch(deleteTaskThunkCreator(beforDndTodolistId, beforDndTaskId));\n};\n\n\nconst initialState = {\n    todolists: [\n        // {\n        //     id: 0, title: \"sdfg\", tasks: [\n        //         {id: 0, title: \"afdg\", isDone: false, priority: \"low\"},\n        //         {id: 1, title: \"dfgdgd\", isDone: false, priority: \"low\"},\n        //         {id: 2, title: \"fg\", isDone: false, priority: \"low\"},\n        //     ]\n        // },\n    ],\n    buttonTitle: 'X',\n};\n\nconst ToDoListsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_TODOLISTS:\n            return {\n                ...state,\n                todolists: action.todoLists.map(item => ({...item, tasks: []})),\n            };\n        case SET_TASKS:\n            return {\n                ...state,\n                todolists: state.todolists.map(item => {\n                    if (item.id === action.todolistId) return {...item, tasks: action.tasks};\n                    else return item;\n                })\n            };\n        case ADD_TODOLIST: {\n            return {\n                ...state,\n                todolists: [action.newTodoList, ...state.todolists]\n            }\n        }\n        case ADD_TASK: {\n            return {\n                ...state,\n                todolists: state.todolists.map(item => {\n                    if (item.id === action.todolistId) return {...item, tasks: [action.newTask, ...item.tasks]};\n                    else return item;\n                })\n            }\n        }\n        case DELETE_LIST_TASK: {\n            return {\n                ...state,\n                todolists: state.todolists.filter(listTask => listTask.id !== action.tasksId),\n            }\n        }\n        case DELETE_TASK: {\n            return {\n                ...state,\n                todolists: state.todolists.map(item => {\n                    if (item.id === action.todolistId) {\n                        return {...item, tasks: [...item.tasks.filter(task => task.id !== action.taskId)]};\n                    } else return item;\n                })\n            }\n        }\n        case CHANGE_OBJ: {\n            return {\n                ...state,\n                todolists: state.todolists.map(item => {\n                    if (item.id === action.tasksId) return {\n                        ...item,\n                        tasks: item.tasks.map(task => {\n                            if (task.id === action.taskId) return {...task, ...action.changeObj};\n                            else return task;\n                        })\n                    };\n                    else return item;\n                })\n            }\n        }\n        case CHANGE_TODOLIST_TITLE: {\n            return {\n                ...state,\n                todolists: state.todolists.map(item => {\n                    if (item.id === action.todolistId) return {...item, title: action.title};\n                    else return item;\n                })\n            }\n        }\n        default:\n            return state;\n    }\n};\nexport default ToDoListsReducer;\n","import React from 'react';\nimport {dragAndDropThunkCreator} from \"../../../BLL/Reducer\";\nimport {connect} from \"react-redux\";\n\nclass Droppable extends React.Component {\n    drop = (e) => {\n        e.preventDefault();\n        const dataOfTaskId = e.dataTransfer.getData(`transfer`);\n        // e.target.appendChild(document.getElementById(dataOfTaskId));\n        this.props.dragAndDropThunkCreator(this.props.id, dataOfTaskId);\n    };\n\n    allowDrop = (e) => e.preventDefault();\n\n    render() {\n        return (\n            <div id={this.props.id} onDrop={this.drop} onDragOver={this.allowDrop} style={this.props.style}>\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default connect(null, {dragAndDropThunkCreator})(Droppable);","import React from 'react';\nimport css from './TodoListTasks.module.css';\nimport TodoListTask from \"./TodoListTask/TodoListTask\";\nimport Droppable from \"../../DragAndDrop/Droppable/Droppable\";\n\nconst TodoListTasks = (props) => {\n    const droppableStyle = {\n        height: `100%`\n    };\n    let tasksElements = props.tasks.map(task => <TodoListTask key={task.id} task={task} changeTitle={props.changeTitle}\n                                                              changeStatus={props.changeStatus} tasksId={props.tasksId}\n                                                              deleteTask={props.deleteTask}\n    />);\n    return (\n        <div className={css.TodoListTasks}>\n            <Droppable id={props.tasksId} style={droppableStyle}>\n                {tasksElements}\n            </Droppable>\n        </div>\n    );\n};\n\nexport default TodoListTasks;","import React from 'react';\nimport '../../../App.css';\nimport css from './TodoListFooter.module.css';\nimport button from './../../Button/Button.module.css';\n\nclass TodoListFooter extends React.Component {\n    state = {\n        isHidden: false\n    };\n\n    onAllFilterClick = () => this.props.changeFilter(\"All\");\n    onCompletedFilterClick = () => this.props.changeFilter(\"Completed\");\n    onActiveFilterClick = () => this.props.changeFilter(\"Active\");\n    onShowFiltersClick = () => this.setState({isHidden: true});\n    onHideFiltersClick = () => this.setState({isHidden: false});\n\n    render = () => {\n        let classForAll = this.props.filterValue === \"All\" ? `${button.button} ${css.filterActive}` : `${button.button}`;\n        let classForCompleted = this.props.filterValue === \"Completed\" ? `${button.button} ${css.filterActive}` : `${button.button}`;\n        let classForActive = this.props.filterValue === \"Active\" ? `${button.button} ${css.filterActive}` : `${button.button}`;\n        return (\n            <div>\n                {!this.state.isHidden && <div className={css.center}>\n                    <button onClick={this.onAllFilterClick} className={classForAll}>All</button>\n                    <button onClick={this.onCompletedFilterClick} className={classForCompleted}>Completed</button>\n                    <button onClick={this.onActiveFilterClick} className={classForActive}>Active</button>\n                </div>\n                }\n                {!this.state.isHidden && <span style={{color: `gold`}} onClick={this.onShowFiltersClick}>Hide</span>}\n                {this.state.isHidden && <span style={{color: `gold`}} onClick={this.onHideFiltersClick}>Show</span>}\n            </div>\n        );\n    }\n}\n\nexport default TodoListFooter;","import React, {useState} from 'react';\nimport css from './TodoListTitle.module.css';\nimport button from './../../Button/Button.module.css';\n\nconst TodoListTitle = (props) => {\n    let [editMode, setEditMode] = useState(false);\n    let [title, setTitle] = useState(props.title);\n    let changeTitle = e => setTitle(e.currentTarget.value);\n    let deactivateEditMode = () => {\n        setEditMode(false);\n        props.changeTodoLIstTitle(title);\n    };\n    let activateEditMode = () => setEditMode(true);\n    return (\n        <div>\n            <button className={button.button} onClick={props.deleteListTask}>X</button>\n            <div>\n                <h3 className={`${css.title} ${css.center}`}>\n                    {editMode\n                        ? <input onBlur={deactivateEditMode}\n                                 onChange={changeTitle}\n                                 type=\"text\"\n                                 autoFocus={true}\n                                 value={title}/>\n                        : <span onClick={activateEditMode}>{props.title}</span>}\n                </h3>\n            </div>\n        </div>\n    );\n};\n\nexport default TodoListTitle;","import React from 'react';\nimport css from './Button.module.css';\n\nconst Button = (props) => {\n    return (<button className={css.button} onClick={props.buttonCallBack}>{props.title}</button>)\n};\n\nexport default Button;","import React from 'react';\nimport css from './AddNewItemForm.module.css';\nimport Button from \"../Button/Button\";\n\nclass AddNewItemForm extends React.Component {\n    state = {\n        error: false,\n        title: ''\n    };\n\n    onAddItemClick = () => {\n        let newText = this.state.title;\n        this.setState({title: ''});\n\n        if (newText === \"\") {\n            this.setState({error: true});\n        } else {\n            this.setState({error: false});\n            // передаём новый текст наружу\n            this.props.addItem(newText);\n        }\n    };\n\n    onTitleChanged = (e) => {\n        this.setState({\n            error: false,\n            title: e.currentTarget.value\n        });\n    };\n\n    onKeyPress = (e) => {\n        if (e.key === \"Enter\") this.onAddItemClick();\n    };\n\n    render = () => {\n        let classNameForInput = this.state.error ? `${css.classNameForInput} ${css.error}` : `${css.classNameForInput}`;\n        return (\n            <div className={css.newTaskForm}>\n                <input className={classNameForInput} type=\"text\" placeholder=\"New item name\"\n                       onChange={this.onTitleChanged}\n                       onKeyPress={this.onKeyPress}\n                       value={this.state.title}\n                />\n                <Button buttonCallBack={this.onAddItemClick.bind(this)} title={`Add`}/>\n            </div>\n        );\n    }\n}\n\nexport default AddNewItemForm;","import React from 'react';\nimport '../../App.css';\nimport css from './TodoList.module.css';\nimport TodoListTasks from \"./TodoListTasks/TodoListTasks\";\nimport TodoListFooter from \"./TodoListFooter/TodoListFooter\";\nimport TodoListTitle from \"./TodoListTitle/TodoListTitle\";\nimport AddNewItemForm from \"./../AddNewItemForm/AddNewItemForm\";\nimport {connect} from \"react-redux\";\nimport {\n    addTaskThunkCreator, setTasksThunkCreator, deleteListTaskThunkCreator, deleteTaskThunkCreator,\n    changeObjectThunkCreator, changeTodoListTitleACThunkCreator\n} from \"../../BLL/Reducer\";\n\nclass TodoList extends React.Component {\n    componentDidMount() {\n        this.props.setTasksThunkCreator(this.props.id);\n    }\n\n    // _restoreState = () => {\n    //     // объявляем наш стейт стартовый\n    //     let state = this.state;\n    //     // считываем сохранённую ранее строку из localStorage\n    //     let stateAsString = localStorage.getItem(\"our-state-\" + this.props.id);\n    //     // а вдруг ещё не было ни одного сохранения?? тогда будет null.\n    //     // если не null, тогда превращаем строку в объект\n    //     if (stateAsString !== null) {\n    //         state = JSON.parse(stateAsString);\n    //     }\n    //     // устанавливаем стейт (либо пустой, либо восстановленный) в стейт\n    //     this.setState(state, () => {\n    //         this.state.tasks.forEach(t => {\n    //             if (t.id >= this.nextTaskId) {\n    //                 this.nextTaskId = t.id + 1;\n    //             }\n    //         })\n    //     });\n    // };\n    // _addTask = (newText) => {\n    //     let newTask = {\n    //         id: this.nextTaskId,\n    //         title: newText,\n    //         isDone: false,\n    //         priority: \"low\"\n    //     };\n    //     // инкрементим (увеличим) id следующей таски, чтобы при следюущем добавлении, он был на 1 больше\n    //     this.nextTaskId++;\n    //     // let newTasks = [...this.state.tasks, newTask];\n    //     // this.setState({\n    //     //     tasks: newTasks\n    //     // }, () => {\n    //     //     this.saveState();\n    //     // });\n    //     this.props.addTask(newTask, this.props.id);\n    //     console.log(newTask);\n    // };\n\n    saveState = () => {\n        // переводим объект в строку\n        let stateAsString = JSON.stringify(this.state);\n        // сохраняем нашу строку в localStorage под ключом \"our-state\"\n        localStorage.setItem(\"our-state\" + this.props.id, stateAsString);\n    };\n\n    nextTaskId = 0;\n    state = {\n        tasks: [],\n        filterValue: \"All\",\n        editMode: false,\n        todoListTitle: this.props.title\n    };\n\n    changeFilter = (newFilterValue) => {\n        this.setState({filterValue: newFilterValue}, () => {\n            this.saveState();\n        });\n    };\n\n    addNewTask = (newText) => this.props.addTaskThunkCreator(newText, this.props.id);\n    deleteListTask = (todoListId) => this.props.deleteListTaskThunkCreator(todoListId);\n    deleteTask = (todolistId, taskId) => this.props.deleteTaskThunkCreator(todolistId, taskId);\n    changeTodoLIstTitle = (title) => this.props.changeTodoListTitleACThunkCreator(this.props.id, title);\n    changeObjectAPI = (taskId, obj) => this.props.changeObjectThunkCreator(this.props.id, taskId, obj);\n\n    changeTask = (taskId, obj) => this.changeObjectAPI(taskId, obj);\n    changeStatus = (taskId, isDone) => this.changeTask(taskId, {status: isDone});\n    changeTitle = (taskId, title) => this.changeTask(taskId, {title: title});\n\n    deactivateEditMode = () => this.setState({editMode: false});\n    activateEditMode = () => this.setState({editMode: true});\n\n    render = () => {\n\n        const {tasks = []} = this.props;\n\n        return (\n            <div className={css.todoList}>\n                <div>\n                    <TodoListTitle title={this.props.title}\n                                   todolistId={this.props.id}\n                                   changeTodoLIstTitle={this.changeTodoLIstTitle}\n                                   deleteListTask={() => this.deleteListTask(this.props.id)}/>\n                    <AddNewItemForm addItem={this.addNewTask}/>\n                </div>\n\n                <TodoListTasks changeStatus={this.changeStatus}\n                               changeTitle={this.changeTitle}\n                               tasksId={this.props.id}\n                               deleteTask={this.deleteTask}\n                               tasks={tasks.filter(t => {\n                                   if (this.state.filterValue === \"All\") {\n                                       return true;\n                                   }\n                                   if (this.state.filterValue === \"Active\") {\n                                       return t.status === 0;\n                                   }\n                                   if (this.state.filterValue === \"Completed\") {\n                                       return t.status === 2;\n                                   }\n                               })}/>\n                <TodoListFooter changeFilter={this.changeFilter} filterValue={this.state.filterValue}/>\n            </div>\n\n        );\n    }\n}\n\nconst ConnectTodoList = connect(null, {\n    addTaskThunkCreator,\n    setTasksThunkCreator,\n    deleteListTaskThunkCreator,\n    deleteTaskThunkCreator,\n    changeTodoListTitleACThunkCreator,\n    changeObjectThunkCreator\n})(TodoList);\nexport default ConnectTodoList;\n\n","import React from 'react';\nimport css from './LogOut.module.css';\nimport {NavLink} from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport {logOutThunkCreator} from \"../../BLL/AuthReducer\";\nimport {getAuthUserIsAuthS, getAuthUserLoginS} from \"../../BLL/AuthSelectors\";\n\nconst LogOut = (props) => {\n    return (\n        <div className={css.textLogin}>\n            {props.isAuth\n                ? <span>\n                    {props.login}\n                    <span>\n                        <NavLink to={``} className={css.NavLink} onClick={props.logOutThunkCreator}>Log out</NavLink>\n                    </span>\n                   </span>\n                : <div/>}\n        </div>\n    );\n};\n\nlet mapStateToProps = state => ({isAuth: getAuthUserIsAuthS(state), login: getAuthUserLoginS(state)});\nexport default connect(mapStateToProps, {logOutThunkCreator})(LogOut);","import React from 'react';\nimport css from './TodoList.module.css';\nimport TodoList from \"./../../components/TodoList/TodoList.js\";\nimport AddNewItemForm from \"./../../components/AddNewItemForm/AddNewItemForm\";\nimport {connect} from \"react-redux\";\nimport {addTodoListThunkCreator, setTodoListsThunkCreator} from \"./../../BLL/Reducer\";\nimport LogOut from \"./../../components/LogOut/LogOut\";\n\nclass TodoListPage extends React.Component {\n    componentDidMount() {\n        this.props.setTodoListsThunkCreator();\n    }\n\n    addTodoList = (title) => this.props.addTodoListThunkCreator(title);\n\n    render = () => {\n        let todolists = this.props.todolists.map(tl => <TodoList key={tl.id} id={tl.id} title={tl.title}\n                                                                 tasks={tl.tasks}/>);\n        return (\n            <>\n                <LogOut/>\n                <div className={css.center}>\n                    <AddNewItemForm addItem={this.addTodoList.bind(this)}/>\n                </div>\n                <div className={css.MainComponentTodoList}>{todolists}</div>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({todolists: state.partState.todolists});\nexport default connect(mapStateToProps, {\n    addTodoListThunkCreator, setTodoListsThunkCreator,\n})(TodoListPage);\n\n// nextTodoListId = 0;\n// state = {\n//     todolists: []\n// };\n// _addTodoList = (title) => {\n//     let newTodoList = {\n//         id: this.nextTodoListId,\n//         title: title\n//     };\n//     // this.setState({todolists: [...this.state.todolists, newTodoList]}, () => {\n//     //     this.saveState();\n//     // });\n//     // this.nextTodoListId++;\n// };\n// saveState = () => {\n//     // переводим объект в строку\n//     let stateAsString = JSON.stringify(this.state);\n//     // сохраняем нашу строку в localStorage под ключом \"our-state\"\n//     localStorage.setItem(\"todolists-state\", stateAsString);\n// };\n// _restoreState = () => {\n//     // объявляем наш стейт стартовый\n//     let state = this.state;\n//     // считываем сохранённую ранее строку из localStorage\n//     let stateAsString = localStorage.getItem(\"todolists-state\");\n//     // а вдруг ещё не было ни одного сохранения?? тогда будет null.\n//     // если не null, тогда превращаем строку в объект\n//     if (stateAsString != null) {\n//         state = JSON.parse(stateAsString);\n//     }\n//     // устанавливаем стейт (либо пустой, либо восстановленный) в стейт\n//     this.setState(state, () => {\n//         this.state.todolists.forEach(t => {\n//             if (t.id >= this.nextTodoListId) {\n//                 this.nextTodoListId = t.id + 1;\n//             }\n//         })\n//     });\n// };","import React from 'react';\nimport './App.css';\nimport {connect} from \"react-redux\";\nimport {Redirect, Route} from \"react-router-dom\";\nimport LoginContainer from \"./components/Login/LoginContainer\";\nimport {getAuthUserIsAuthS} from \"./BLL/AuthSelectors\";\nimport TodoListPage from \"./components/TodoList/TodoListPage\";\nimport {authorizationCheckThunk} from \"./BLL/AuthReducer\";\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.authorizationCheckThunk();\n    }\n\n    render = () => {\n        return (\n            <>\n                <div className={'Content'}>\n                    <Route path='/todoList' render={() => <TodoListPage/>}/>\n                    <Route path='/login' render={() => <LoginContainer/>}/>\n                </div>\n                {this.props.isAuth ? <Redirect to={'/todoList'}/> : <Redirect to={'/login'}/>}\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({isAuth: getAuthUserIsAuthS(state)});\nexport default connect(mapStateToProps, {authorizationCheckThunk})(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport Reducer from './Reducer';\nimport thunkMiddleware from 'redux-thunk'\nimport AuthReducer from \"./AuthReducer\";\nimport {reducer as formReducer} from 'redux-form';\n\nconst store = createStore(combineReducers({\n    partState: Reducer,\n    authDataState: AuthReducer,\n    form: formReducer,\n}), applyMiddleware(thunkMiddleware));\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./BLL/store\";\nimport {Provider} from \"react-redux\";\nimport {HashRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <HashRouter>\n            <App/>\n        </HashRouter>\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"priority\":\"TodoListTask_priority__1_AWY\",\"taskText\":\"TodoListTask_taskText__26txn\",\"todoListTask\":\"TodoListTask_todoListTask__2NfyB\",\"done\":\"TodoListTask_done__WI3Ye\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoList\":\"TodoList_todoList__1KsE9\",\"MainComponentTodoList\":\"TodoList_MainComponentTodoList__1oX_a\",\"center\":\"TodoList_center__1cUoi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterActive\":\"TodoListFooter_filterActive__l7TUc\",\"center\":\"TodoListFooter_center___vcB-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newTaskForm\":\"AddNewItemForm_newTaskForm__2XwTX\",\"classNameForInput\":\"AddNewItemForm_classNameForInput__MSL6C\",\"error\":\"AddNewItemForm_error__3HJPj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"ReduxFormsControls_formControl__F7IC4\",\"error\":\"ReduxFormsControls_error__1cEVw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"TodoListTitle_title__mbKKo\",\"center\":\"TodoListTitle_center__2IQsb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textLogin\":\"LogOut_textLogin__ntRos\",\"NavLink\":\"LogOut_NavLink__3Hbur\"};"],"sourceRoot":""}