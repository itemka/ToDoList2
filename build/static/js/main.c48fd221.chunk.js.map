{"version":3,"sources":["components/TodoList/TodoListTasks/TodoListTask/TodoListTask.module.css","components/AddNewItemForm/AddNewItemForm.module.css","components/TodoList/TodoListFooter/TodoListFooter.module.css","components/TodoList/TodoList.module.css","components/TodoList/TodoListTasks/TodoListTasks.module.css","components/TodoList/TodoListTitle/TodoListTitle.module.css","components/Button/Button.module.css","Dnd/Draggable/Draggable.js","components/TodoList/TodoListTasks/TodoListTask/TodoListTask.js","API.js","Redux/Reducer.jsx","Dnd/Droppable/Droppable.js","components/TodoList/TodoListTasks/TodoListTasks.js","components/TodoList/TodoListFooter/TodoListFooter.js","components/TodoList/TodoListTitle/TodoListTitle.js","components/Button/Button.js","components/AddNewItemForm/AddNewItemForm.js","components/TodoList/TodoList.js","App.js","serviceWorker.js","Redux/store.js","index.js"],"names":["module","exports","priority","taskText","todoListTask","done","newTaskForm","classNameForInput","error","filterActive","todoList","TodoListTasks","title","button","Draggable","drag","e","dataTransfer","setData","target","id","noAllowDrop","stopPropagation","react_default","a","createElement","this","props","draggable","onDragStart","style","onDragOver","children","React","Component","TodoListTask","state","editMode","taskTitle","_this","task","onIsDoneChanged","event","changeStatus","currentTarget","checked","updateTitle","setState","value","activateEditMode","deactivateEditMode","changeTitle","onDeleteTask","deleteTask","tasksId","render","containerCssClass","status","concat","css","Draggable_Draggable","className","type","onChange","onBlur","autoFocus","onClick","instance","axios","create","baseURL","withCredentials","headers","API-KEY","api","newTitle","post","get","TodoListId","delete","taskId","objects","put","todolistId","ADD_TASK","addTaskThunkCreator","dispatch","then","response","newTask","addTask","data","item","deleteTaskThunkCreator","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","_x","apply","arguments","initialState","todolists","buttonTitle","ToDoListsReducer","length","undefined","action","_objectSpread","todoLists","map","tasks","newTodoList","toConsumableArray","filter","listTask","changeObj","Droppable","drop","preventDefault","dataOfTaskId","getData","dragAndDropThunkCreator","allowDrop","onDrop","connect","dropTodolistId","dndId","_ref2","_callee2","getState","beforDndTodolistId","beforDndTaskId","beforDndTitle","_context2","console","log","el","_x2","_x3","tasksElements","TodoListTasks_TodoListTask_TodoListTask","key","Dnd_Droppable_Droppable","height","TodoListFooter","isHidden","onAllFilterClick","changeFilter","onCompletedFilterClick","onActiveFilterClick","onShowFiltersClick","onHideFiltersClick","classForAll","filterValue","classForCompleted","classForActive","color","TodoListTitle","changeTodoLIstTitle","deleteListTask","Button","Fragment","buttonCallBack","AddNewItemForm","onAddItemClick","newText","addItem","onTitleChanged","onKeyPress","placeholder","components_Button_Button","bind","assertThisInitialized","TodoList","saveState","stateAsString","JSON","stringify","localStorage","setItem","nextTaskId","todoListTitle","newFilterValue","restoreState","setTasksThunkCreator","addNewTask","todoListId","deleteListTaskThunkCreator","changeTodoListTitleACThunkCreator","changeObjectAPI","obj","changeObjectThunkCreator","changeTask","isDone","_this$props$tasks","TodoList_TodoListTitle_TodoListTitle","components_AddNewItemForm_AddNewItemForm","TodoList_TodoListTasks_TodoListTasks","t","TodoList_TodoListFooter_TodoListFooter","ConnectTodoList","setTasks","items","changeTodoListTitleAC","find","forEach","App","nextTodoListId","addTodoList","addTodoListThunkCreator","setTodoListsThunkCreator","_addTodoList","_restoreState","getItem","parse","tl","components_TodoList_TodoList","ConnectedApp","Boolean","window","location","hostname","match","store","createStore","Reducer","applyMiddleware","thunkMiddleware","ReactDOM","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c48fd221.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"priority\":\"TodoListTask_priority__1_AWY\",\"taskText\":\"TodoListTask_taskText__26txn\",\"todoListTask\":\"TodoListTask_todoListTask__2NfyB\",\"done\":\"TodoListTask_done__WI3Ye\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newTaskForm\":\"AddNewItemForm_newTaskForm__2XwTX\",\"classNameForInput\":\"AddNewItemForm_classNameForInput__MSL6C\",\"error\":\"AddNewItemForm_error__3HJPj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterActive\":\"TodoListFooter_filterActive__l7TUc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoList\":\"TodoList_todoList__1KsE9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoListTasks\":\"TodoListTasks_TodoListTasks__RYP6B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"TodoListTitle_title__mbKKo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3QF_k\"};","import React from 'react';\n\nexport default class Draggable extends React.Component {\n    drag = (e) => {\n        e.dataTransfer.setData(`transfer`, e.target.id);\n    };\n\n    noAllowDrop = (e) => {\n        e.stopPropagation();\n    };\n\n    render() {\n        return (\n            <div id={this.props.id} draggable={`true`} onDragStart={this.drag} style={this.props.style}\n                 onDragOver={this.noAllowDrop}>\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\n","import React from 'react';\nimport '../../../../App.css';\nimport css from './TodoListTask.module.css';\nimport button from './../../../Button/Button.module.css';\nimport Draggable from \"./../../../../Dnd/Draggable/Draggable\";\n\nclass TodoListTask extends React.Component {\n\n    state = {\n        editMode: false,\n        taskTitle: this.props.task.title,\n    };\n\n    onIsDoneChanged = event => this.props.changeStatus(this.props.task.id, event.currentTarget.checked ? 2 : 0);\n\n    updateTitle = event => {\n        /*this.props.changeTitle(this.props.task.id, event.currentTarget.value);*/\n        this.setState({taskTitle: event.currentTarget.value});\n    };\n\n    activateEditMode = () => this.setState({editMode: true});\n    deactivateEditMode = () => {\n        this.setState({editMode: false});\n        this.props.changeTitle(this.props.task.id, this.state.taskTitle);\n    };\n    onDeleteTask = () => this.props.deleteTask(this.props.tasksId, this.props.task.id);\n\n    render = () => {\n        let containerCssClass = this.props.task.status === 2 ? `${css.todoListTask} ${css.done}` : `${css.todoListTask}`;\n        return (\n            <Draggable id={this.props.task.id}>\n                <div className={`${containerCssClass} ${css.todoListTask}`}>\n                    <input type=\"checkbox\" checked={this.props.task.status} onChange={this.onIsDoneChanged}/>{'   '}\n                    <span className={css.taskText}>\n                    {this.state.editMode\n                        ? <input onBlur={this.deactivateEditMode}\n                                 onChange={this.updateTitle}\n                                 autoFocus={true}\n                                 value={this.state.taskTitle}/>\n                        : <span onClick={this.activateEditMode}>{this.props.task.title}</span>\n                    }\n                </span>{'   '}\n                    <span className={css.priority}> (priority: {this.props.task.priority})</span>\n                    <button className={button.button} onClick={this.onDeleteTask}>X</button>\n                </div>\n            </Draggable>\n        );\n    }\n}\n\nexport default TodoListTask;","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: `https://social-network.samuraijs.com/api/1.0/todo-lists/`,\n    withCredentials: true,\n    headers: {\"API-KEY\": \"326adc8b-48be-4905-a33d-14875af1c491\"}\n});\n\nexport const api = {\n    createTodoList(newTitle) {\n        return instance.post(``, {title: newTitle})\n    },\n    getTodoList() {\n        return instance.get(``)\n    },\n    getTasks(TodoListId) {\n        return instance.get(`${TodoListId}/tasks`)\n    },\n    createTasks(TodoListId, newTitle) {\n        return instance.post(`${TodoListId}/tasks`, {title: newTitle})\n    },\n    deleteTodoList(TodoListId) {\n        return instance.delete(`${TodoListId}`)\n    },\n    deleteTask(TodoListId, taskId) {\n        return instance.delete(`tasks/${taskId}`)\n    },\n    changeObjectAPI(objects) {\n        return instance.put(`tasks`, objects)\n    },\n    changeTodoListTitle(todolistId, title) {\n        return instance.put(`${todolistId}`, {title})\n    }\n};","import {api} from \"../API\";\n\nexport const SET_TODOLISTS = 'SET_TODOLISTS';\nexport const SET_TASKS = 'SET_TASKS';\nexport const ADD_TODOLIST = 'TodoList/Reduser/ADD_TODOLIST';\nexport const ADD_TASK = 'TodoList/Reduser/ADD_TASK';\nexport const DELETE_LIST_TASK = 'TodoList/Reduser/DELETE_LIST_TASK';\nexport const DELETE_TASK = 'TodoList/Reduser/DELETE_TASK';\nexport const CHANGE_OBJ = 'TodoList/Reduser/CHANGE_OBJ';\nexport const CHANGE_TODOLIST_TITLE = 'TodoList/Reduser/CHANGE_TODOLIST_TITLE';\nexport const FILTER_TASKS = 'TodoList/Reduser/FILTER_TASKS';\n\n\nexport const setTodoLists = todoLists => ({type: SET_TODOLISTS, todoLists: todoLists});\nexport const setTasks = (tasks, todolistId) => ({type: SET_TASKS, todolistId: todolistId, tasks: tasks});\nexport const addTodoList = newTodoList => ({type: ADD_TODOLIST, newTodoList: newTodoList});\nexport const addTask = (newTask, todolistId) => ({type: ADD_TASK, newTask, todolistId});\nexport const deleteListTask = (tasksId) => ({type: DELETE_LIST_TASK, tasksId: tasksId});\nexport const deleteTask = (todolistId, taskId) => ({type: DELETE_TASK, todolistId, taskId});\nexport const changeObj = (tasksId, taskId, changeObj) => ({type: CHANGE_OBJ, tasksId, taskId, changeObj});\nexport const changeTodoListTitleAC = (todolistId, title) => ({type: CHANGE_TODOLIST_TITLE, todolistId, title});\nexport const filterTasks = (todolistId, tasksId) => ({type: FILTER_TASKS, todolistId, tasksId});\n\n\nexport const addTodoListThunkCreator = (title) => dispatch => {\n    api.createTodoList(title).then(response => dispatch(addTodoList(response.data.data.item)))\n};\nexport const setTodoListsThunkCreator = () => dispatch => {\n    api.getTodoList().then(response => dispatch(setTodoLists(response.data)))\n};\nexport const addTaskThunkCreator = (newTitle, todolistId) => dispatch => {\n    api.createTasks(todolistId, newTitle).then(response => {\n        dispatch(addTask(response.data.data.item, todolistId));\n    })\n};\nexport const setTasksThunkCreator = (todolistId) => dispatch => {\n    api.getTasks(todolistId).then(response => {\n        dispatch(setTasks(response.data.items, todolistId));\n    })\n};\nexport const deleteListTaskThunkCreator = (todoListId) => dispatch => {\n    api.deleteTodoList(todoListId).then(response => {\n        dispatch(deleteListTask(todoListId))\n    })\n};\nexport const deleteTaskThunkCreator = (todolistId, taskId) => async dispatch => {\n    await api.deleteTask(todolistId, taskId);\n    dispatch(deleteTask(todolistId, taskId));\n};\nexport const changeTodoListTitleACThunkCreator = (todolistId, title) => dispatch => {\n    api.changeTodoListTitle(todolistId, title).then(response => {\n        dispatch(changeTodoListTitleAC(todolistId, title));\n    })\n};\nexport const changeObjectThunkCreator = (todolistId, taskId, obj) => (dispatch, getState) => {\n    getState().todolists.find(item => item.id === todolistId).tasks.forEach(el => {\n        if (el.id === taskId) {\n            api.changeObjectAPI({...el, ...obj}).then(response => {\n                dispatch(changeObj(todolistId, taskId, obj))\n            })\n        }\n    });\n};\n\nexport const dragAndDropThunkCreator = (dropTodolistId, dndId) => async (dispatch, getState) => {\n    let beforDndTodolistId = '';\n    let beforDndTaskId = '';\n    let beforDndTitle = '';\n    console.log(getState());\n    await getState().todolists.map(item => {\n        item.tasks.map(el => {\n            if (el.id === dndId) {\n                beforDndTodolistId = item.id;\n                beforDndTaskId = el.id;\n                beforDndTitle = el.title;\n            }\n        });\n    });\n    await dispatch(addTaskThunkCreator(beforDndTitle, dropTodolistId));\n    await dispatch(deleteTaskThunkCreator(beforDndTodolistId, beforDndTaskId));\n};\n\n\nconst initialState = {\n    todolists: [\n        // {\n        //     id: 0, title: \"sdfg\", tasks: [\n        //         {id: 0, title: \"afdg\", isDone: false, priority: \"low\"},\n        //         {id: 1, title: \"dfgdgd\", isDone: false, priority: \"low\"},\n        //         {id: 2, title: \"fg\", isDone: false, priority: \"low\"},\n        //     ]\n        // },\n    ],\n    buttonTitle: 'X',\n};\n\nconst ToDoListsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_TODOLISTS:\n            return {\n                ...state,\n                todolists: action.todoLists.map(item => ({...item, tasks: []})),\n            };\n        case SET_TASKS:\n            return {\n                ...state,\n                todolists: state.todolists.map(item => {\n                    if (item.id === action.todolistId) return {...item, tasks: action.tasks};\n                    else return item;\n                })\n            };\n        case ADD_TODOLIST: {\n            return {\n                ...state,\n                todolists: [action.newTodoList, ...state.todolists]\n            }\n        }\n        case ADD_TASK: {\n            return {\n                ...state,\n                todolists: state.todolists.map(item => {\n                    if (item.id === action.todolistId) return {...item, tasks: [action.newTask, ...item.tasks]};\n                    else return item;\n                })\n            }\n        }\n        case DELETE_LIST_TASK: {\n            return {\n                ...state,\n                todolists: state.todolists.filter(listTask => listTask.id !== action.tasksId),\n            }\n        }\n        case DELETE_TASK: {\n            return {\n                ...state,\n                todolists: state.todolists.map(item => {\n                    if (item.id === action.todolistId) {\n                        return {...item, tasks: [...item.tasks.filter(task => task.id !== action.taskId)]};\n                    } else return item;\n                })\n            }\n        }\n        case CHANGE_OBJ: {\n            return {\n                ...state,\n                todolists: state.todolists.map(item => {\n                    if (item.id === action.tasksId) return {\n                        ...item,\n                        tasks: item.tasks.map(task => {\n                            if (task.id === action.taskId) return {...task, ...action.changeObj};\n                            else return task;\n                        })\n                    };\n                    else return item;\n                })\n            }\n        }\n        case CHANGE_TODOLIST_TITLE: {\n            return {\n                ...state,\n                todolists: state.todolists.map(item => {\n                    if (item.id === action.todolistId) return {...item, title: action.title};\n                    else return item;\n                })\n            }\n        }\n        default:\n            return state;\n    }\n};\nexport default ToDoListsReducer;\n","import React from 'react';\nimport {dragAndDropThunkCreator} from \"../../Redux/Reducer\";\nimport {connect} from \"react-redux\";\n\nclass Droppable extends React.Component {\n\n    drop = (e) => {\n        e.preventDefault();\n        const dataOfTaskId = e.dataTransfer.getData(`transfer`);\n        // e.target.appendChild(document.getElementById(dataOfTaskId));\n        this.props.dragAndDropThunkCreator(this.props.id, dataOfTaskId);\n    };\n\n    allowDrop = (e) => {\n        e.preventDefault();\n    };\n\n    render() {\n        return (\n            <div id={this.props.id} onDrop={this.drop} onDragOver={this.allowDrop} style={this.props.style}>\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default connect(null, {dragAndDropThunkCreator})(Droppable);","import React from 'react';\nimport css from './TodoListTasks.module.css';\nimport TodoListTask from \"./../TodoListTasks/TodoListTask/TodoListTask\";\nimport Droppable from \"./../../../Dnd/Droppable/Droppable\";\n\nclass TodoListTasks extends React.Component {\n    render = () => {\n        const droppableStyle = {\n            height: `100%`\n        };\n\n        let tasksElements = this.props.tasks.map(task => <TodoListTask key={task.id} task={task}\n                                                                       tasksId={this.props.tasksId}\n                                                                       changeStatus={this.props.changeStatus}\n                                                                       changeTitle={this.props.changeTitle}\n                                                                       deleteTask={this.props.deleteTask}/>);\n        return (\n            <div className={css.TodoListTasks}>\n                <Droppable id={this.props.tasksId} style={droppableStyle}>\n                    {tasksElements}\n                </Droppable>\n            </div>\n        );\n    }\n}\n\nexport default TodoListTasks;","import React from 'react';\nimport '../../../App.css';\nimport css from './TodoListFooter.module.css';\nimport button from './../../Button/Button.module.css';\n\nclass TodoListFooter extends React.Component {\n    state = {\n        isHidden: false\n    };\n\n    onAllFilterClick = () => this.props.changeFilter(\"All\");\n    onCompletedFilterClick = () => this.props.changeFilter(\"Completed\");\n    onActiveFilterClick = () => this.props.changeFilter(\"Active\");\n    onShowFiltersClick = () => this.setState({isHidden: true});\n    onHideFiltersClick = () => this.setState({isHidden: false});\n\n    render = () => {\n        let classForAll = this.props.filterValue === \"All\" ? `${button.button} ${css.filterActive}` : `${button.button}`;\n        let classForCompleted = this.props.filterValue === \"Completed\" ? `${button.button} ${css.filterActive}` : `${button.button}`;\n        let classForActive = this.props.filterValue === \"Active\" ? `${button.button} ${css.filterActive}` : `${button.button}`;\n        return (\n            <div>\n                {!this.state.isHidden && <div className={`center`}>\n                    <button onClick={this.onAllFilterClick} className={classForAll}>All</button>\n                    <button onClick={this.onCompletedFilterClick} className={classForCompleted}>Completed</button>\n                    <button onClick={this.onActiveFilterClick} className={classForActive}>Active</button>\n                </div>\n                }\n                {!this.state.isHidden && <span style={{color: `gold`}} onClick={this.onShowFiltersClick}>Hide</span>}\n                {this.state.isHidden && <span style={{color: `gold`}} onClick={this.onHideFiltersClick}>Show</span>}\n            </div>\n        );\n    }\n}\n\nexport default TodoListFooter;","import React from 'react';\nimport '../../../App.css';\nimport css from './TodoListTitle.module.css';\nimport button from './../../Button/Button.module.css';\n\nclass TodoListTitle extends React.Component {\n    state = {\n        editMode: false,\n        title: this.props.title\n    };\n    changeTitle = e => {\n        this.setState({title: e.currentTarget.value})\n    };\n    deactivateEditMode = () => {\n        this.setState({editMode: false});\n        this.props.changeTodoLIstTitle(this.state.title);\n    };\n    activateEditMode = () => {\n        this.setState({editMode: true});\n    };\n    render = () => {\n        return (\n            <div>\n                <div>\n                    <button className={button.button} onClick={this.props.deleteListTask}>X</button>\n                </div>\n                <div>\n                    <h3 className={`${css.title} center`}>\n                        {this.state.editMode\n                            ? <input onBlur={this.deactivateEditMode}\n                                     onChange={this.changeTitle}\n                                     type=\"text\"\n                                     autoFocus={true}\n                                     value={this.state.title}/>\n                            : <span onClick={this.activateEditMode}>{this.props.title}</span>}\n                    </h3>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default TodoListTitle;\n\n","import React from 'react';\nimport css from './Button.module.css';\n\nconst Button = (props) => {\n    return (\n        <>\n            <button className={css.button} onClick={props.buttonCallBack}>{props.title}</button>\n        </>\n    )\n};\n\nexport default Button;","import React from 'react';\nimport '../../App.css';\nimport css from './AddNewItemForm.module.css';\nimport Button from \"./../../components/Button/Button\";\n\nclass AddNewItemForm extends React.Component {\n    state = {\n        error: false,\n        title: ''\n    };\n\n    onAddItemClick = () => {\n        let newText = this.state.title;\n        this.setState({title: ''});\n\n        if (newText === \"\") {\n            this.setState({error: true});\n        } else {\n            this.setState({error: false});\n            // передаём новый текст наружу\n            this.props.addItem(newText);\n        }\n    };\n\n    onTitleChanged = (e) => {\n        this.setState({\n            error: false,\n            title: e.currentTarget.value\n        });\n    };\n\n    onKeyPress = (e) => {\n        if (e.key === \"Enter\") {\n            this.onAddItemClick();\n        }\n    };\n\n    render = () => {\n        let classNameForInput = this.state.error ? `${css.classNameForInput} ${css.error}` : `${css.classNameForInput}`;\n        return (\n            <div className={css.newTaskForm}>\n                <input className={classNameForInput} type=\"text\" placeholder=\"New item name\"\n                       onChange={this.onTitleChanged}\n                       onKeyPress={this.onKeyPress}\n                       value={this.state.title}\n                />\n                <Button buttonCallBack={this.onAddItemClick.bind(this)} title={`Add`}/>\n            </div>\n\n        );\n    }\n}\n\nexport default AddNewItemForm;\n\n","import React from 'react';\nimport '../../App.css';\nimport css from './TodoList.module.css';\nimport TodoListTasks from \"./TodoListTasks/TodoListTasks\";\nimport TodoListFooter from \"./TodoListFooter/TodoListFooter\";\nimport TodoListTitle from \"./TodoListTitle/TodoListTitle\";\nimport AddNewItemForm from \"./../AddNewItemForm/AddNewItemForm\";\nimport {connect} from \"react-redux\";\nimport {\n    addTaskThunkCreator, setTasksThunkCreator, deleteListTaskThunkCreator, deleteTaskThunkCreator,\n    changeObjectThunkCreator, changeTodoListTitleACThunkCreator\n} from \"../../Redux/Reducer\";\n\nclass TodoList extends React.Component {\n    componentDidMount() {\n        this.restoreState();\n    }\n\n    // _restoreState = () => {\n    //     // объявляем наш стейт стартовый\n    //     let state = this.state;\n    //     // считываем сохранённую ранее строку из localStorage\n    //     let stateAsString = localStorage.getItem(\"our-state-\" + this.props.id);\n    //     // а вдруг ещё не было ни одного сохранения?? тогда будет null.\n    //     // если не null, тогда превращаем строку в объект\n    //     if (stateAsString !== null) {\n    //         state = JSON.parse(stateAsString);\n    //     }\n    //     // устанавливаем стейт (либо пустой, либо восстановленный) в стейт\n    //     this.setState(state, () => {\n    //         this.state.tasks.forEach(t => {\n    //             if (t.id >= this.nextTaskId) {\n    //                 this.nextTaskId = t.id + 1;\n    //             }\n    //         })\n    //     });\n    // };\n\n    // _addTask = (newText) => {\n    //     let newTask = {\n    //         id: this.nextTaskId,\n    //         title: newText,\n    //         isDone: false,\n    //         priority: \"low\"\n    //     };\n    //     // инкрементим (увеличим) id следующей таски, чтобы при следюущем добавлении, он был на 1 больше\n    //     this.nextTaskId++;\n    //     // let newTasks = [...this.state.tasks, newTask];\n    //     // this.setState({\n    //     //     tasks: newTasks\n    //     // }, () => {\n    //     //     this.saveState();\n    //     // });\n    //     this.props.addTask(newTask, this.props.id);\n    //     console.log(newTask);\n    // };\n\n    saveState = () => {\n        // переводим объект в строку\n        let stateAsString = JSON.stringify(this.state);\n        // сохраняем нашу строку в localStorage под ключом \"our-state\"\n        localStorage.setItem(\"our-state\" + this.props.id, stateAsString);\n    };\n\n    nextTaskId = 0;\n    state = {\n        tasks: [],\n        filterValue: \"All\",\n        editMode: false,\n        todoListTitle: this.props.title\n    };\n\n    changeFilter = (newFilterValue) => {\n        this.setState({filterValue: newFilterValue}, () => {\n            this.saveState();\n        });\n    };\n\n    restoreState = () => this.props.setTasksThunkCreator(this.props.id);\n\n    addNewTask = (newText) => this.props.addTaskThunkCreator(newText, this.props.id);\n    deleteListTask = (todoListId) => this.props.deleteListTaskThunkCreator(todoListId);\n    deleteTask = (todolistId, taskId) => this.props.deleteTaskThunkCreator(todolistId, taskId);\n    changeTodoLIstTitle = (title) => this.props.changeTodoListTitleACThunkCreator(this.props.id, title);\n    changeObjectAPI = (taskId, obj) => this.props.changeObjectThunkCreator(this.props.id, taskId, obj);\n\n    changeTask = (taskId, obj) => this.changeObjectAPI(taskId, obj);\n    changeStatus = (taskId, isDone) => this.changeTask(taskId, {status: isDone});\n    changeTitle = (taskId, title) => this.changeTask(taskId, {title: title});\n\n    deactivateEditMode = () => this.setState({editMode: false});\n    activateEditMode = () => this.setState({editMode: true});\n\n    render = () => {\n\n        const {tasks = []} = this.props;\n\n        return (\n            <div className={css.todoList}>\n                <div>\n                    <TodoListTitle title={this.props.title}\n                                   todolistId={this.props.id}\n                                   changeTodoLIstTitle={this.changeTodoLIstTitle}\n                                   deleteListTask={() => this.deleteListTask(this.props.id)}/>\n                    <AddNewItemForm addItem={this.addNewTask}/>\n                </div>\n\n                <TodoListTasks changeStatus={this.changeStatus}\n                               changeTitle={this.changeTitle}\n                               tasksId={this.props.id}\n                               deleteTask={this.deleteTask}\n                               tasks={tasks.filter(t => {\n                                   if (this.state.filterValue === \"All\") {\n                                       return true;\n                                   }\n                                   if (this.state.filterValue === \"Active\") {\n                                       return t.status === 0;\n                                   }\n                                   if (this.state.filterValue === \"Completed\") {\n                                       return t.status === 2;\n                                   }\n                               })}/>\n                <TodoListFooter changeFilter={this.changeFilter} filterValue={this.state.filterValue}/>\n            </div>\n\n        );\n    }\n}\n\nconst ConnectTodoList = connect(null, {\n    addTaskThunkCreator,\n    setTasksThunkCreator,\n    deleteListTaskThunkCreator,\n    deleteTaskThunkCreator,\n    changeTodoListTitleACThunkCreator,\n    changeObjectThunkCreator\n})(TodoList);\nexport default ConnectTodoList;\n\n","import React from 'react';\nimport './App.css';\nimport TodoList from \"./components/TodoList/TodoList.js\";\nimport AddNewItemForm from \"./components/AddNewItemForm/AddNewItemForm\";\nimport {connect} from \"react-redux\";\nimport {addTodoListThunkCreator, setTodoListsThunkCreator} from \"./Redux/Reducer\";\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.restoreState();\n    }\n\n    nextTodoListId = 0;\n    state = {\n        todolists: []\n    };\n\n    addTodoList = (title) => this.props.addTodoListThunkCreator(title);\n    restoreState = () => this.props.setTodoListsThunkCreator();\n\n    _addTodoList = (title) => {\n        let newTodoList = {\n            id: this.nextTodoListId,\n            title: title\n        };\n        // this.setState({todolists: [...this.state.todolists, newTodoList]}, () => {\n        //     this.saveState();\n        // });\n        // this.nextTodoListId++;\n    };\n    saveState = () => {\n        // переводим объект в строку\n        let stateAsString = JSON.stringify(this.state);\n        // сохраняем нашу строку в localStorage под ключом \"our-state\"\n        localStorage.setItem(\"todolists-state\", stateAsString);\n    };\n    _restoreState = () => {\n        // объявляем наш стейт стартовый\n        let state = this.state;\n        // считываем сохранённую ранее строку из localStorage\n        let stateAsString = localStorage.getItem(\"todolists-state\");\n        // а вдруг ещё не было ни одного сохранения?? тогда будет null.\n        // если не null, тогда превращаем строку в объект\n        if (stateAsString != null) {\n            state = JSON.parse(stateAsString);\n        }\n        // устанавливаем стейт (либо пустой, либо восстановленный) в стейт\n        this.setState(state, () => {\n            this.state.todolists.forEach(t => {\n                if (t.id >= this.nextTodoListId) {\n                    this.nextTodoListId = t.id + 1;\n                }\n            })\n        });\n    };\n\n    render = () => {\n        let todolists = this.props.todolists.map(tl => <TodoList key={tl.id} id={tl.id} title={tl.title}\n                                                                 tasks={tl.tasks}/>);\n        return (\n            <>\n                <div className={`center`}>\n                    <AddNewItemForm addItem={this.addTodoList.bind(this)}/>\n                </div>\n                <div className=\"App\">\n                    {todolists}\n                </div>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({todolists: state.todolists, state: state});\nconst ConnectedApp = connect(mapStateToProps, {addTodoListThunkCreator, setTodoListsThunkCreator})(App);\nexport default ConnectedApp;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {applyMiddleware, createStore} from \"redux\";\nimport Reducer from './Reducer';\nimport thunkMiddleware from 'redux-thunk'\n\nconst store = createStore(Reducer, applyMiddleware(thunkMiddleware));\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./Redux/store\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}